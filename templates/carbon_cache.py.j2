#!{{graphite_api_home}}/env/bin/python

""" Run twisted in nodaemon mode. """

# This file was generated by Ansible for {{ansible_fqdn}}
# Do NOT modify this file by hand!

import sys
import os
from os.path import abspath, basename, dirname, join
from twisted.scripts.twistd import runApp

# Figure out where we're installed
BIN_DIR = dirname(abspath(__file__))
ROOT_DIR = dirname(BIN_DIR)

# Make sure that carbon's 'lib' dir is in the $PYTHONPATH if we're running from
# source.
LIB_DIR = join(ROOT_DIR, "lib")
sys.path.insert(0, LIB_DIR)


try:
    from carbon.conf import get_parser
    from twisted.scripts.twistd import ServerOptions

    bin_dir = dirname(abspath(__file__))
    root_dir = dirname(bin_dir)
    os.environ.setdefault('GRAPHITE_ROOT', root_dir)
    program = 'carbon-cache'

    parser = get_parser(program)
    (options, args) = parser.parse_args()

    if not args:
        parser.print_usage()
        sys.exit()

    twistd_options = ["--no_save", "--nodaemon"]

    # If no reactor was selected yet, try to use the epoll reactor if
    # available.
    try:
        from twisted.internet import epollreactor # noqa
        twistd_options.append("--reactor=epoll")
    except: # noqa
        pass

    if options.profile:
        twistd_options.append("--profile")
    if options.pidfile:
        twistd_options.extend(["--pidfile", options.pidfile])
    if options.umask:
        twistd_options.extend(["--umask", options.umask])

    # Now for the plugin-specific options.
    twistd_options.append(program)

    if options.debug:
        twistd_options.append("--debug")

    for option_name, option_value in vars(options).items():
        if (option_value is not None and option_name not in (
                "debug", "profile", "pidfile", "umask")):
            twistd_options.extend(["--%s" % option_name.replace("_", "-"),
                                   option_value])

    # Finally, append extra args so that twistd has a chance to process them.
    twistd_options.extend(args)

    config = ServerOptions()
    config.parseOptions(twistd_options)

    runApp(config)

except Exception as exc:
    raise SystemExit(str(exc))

# pylama:ignore=F0401,W0611
